[{"C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\reportWebVitals.js":"1","C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\reducers\\index.js":"2","C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\actions\\quizzes.js":"3","C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\App.js":"4","C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\components\\quizzes.js":"5","C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\actions\\index.js":"6","C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\index.js":"7","C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\actions\\quizQuestions.js":"8","C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\reducers\\quizQuestions.js":"9","C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\components\\quizQuestions.js":"10","C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\actions\\checkQuestionAnswer.js":"11","C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\reducers\\checkQuestionAnswer.js":"12","C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\components\\quizCanvas.js":"13","C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\components\\Functions\\index.js":"14","C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\components\\Functions\\drawPlayboard.js":"15","C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\components\\Functions\\populateBoard.js":"16"},{"size":362,"mtime":1606770287775,"results":"17","hashOfConfig":"18"},{"size":149,"mtime":1606774194107,"results":"19","hashOfConfig":"18"},{"size":909,"mtime":1623426988258,"results":"20","hashOfConfig":"18"},{"size":500,"mtime":1606776344451,"results":"21","hashOfConfig":"18"},{"size":2903,"mtime":1615161094576,"results":"22","hashOfConfig":"18"},{"size":483,"mtime":1606858487819,"results":"23","hashOfConfig":"18"},{"size":913,"mtime":1606772928437,"results":"24","hashOfConfig":"18"},{"size":1326,"mtime":1623426796518,"results":"25","hashOfConfig":"18"},{"size":1115,"mtime":1612669281107,"results":"26","hashOfConfig":"18"},{"size":3293,"mtime":1615163186533,"results":"27","hashOfConfig":"18"},{"size":1089,"mtime":1623426806197,"results":"28","hashOfConfig":"18"},{"size":891,"mtime":1606858270158,"results":"29","hashOfConfig":"18"},{"size":11406,"mtime":1615167536837,"results":"30","hashOfConfig":"18"},{"size":120,"mtime":1615166630906,"results":"31","hashOfConfig":"18"},{"size":2367,"mtime":1615167179636,"results":"32","hashOfConfig":"18"},{"size":3196,"mtime":1615166717848,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"esfto",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\reportWebVitals.js",[],"C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\reducers\\index.js",[],"C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\actions\\quizzes.js",[],["70","71"],"C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\App.js",["72","73","74"],"C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\components\\quizzes.js",["75","76"],"C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\actions\\index.js",[],"C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\index.js",[],"C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\actions\\quizQuestions.js",[],"C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\reducers\\quizQuestions.js",["77"],"C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\components\\quizQuestions.js",["78","79","80","81"],"C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\actions\\checkQuestionAnswer.js",[],"C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\reducers\\checkQuestionAnswer.js",["82"],"C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\components\\quizCanvas.js",["83","84","85"],"/** @format */\r\n\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport { drawPlayboard, populateBoard } from \"./Functions/index\";\r\n\r\nconst columns = 6;\r\nconst rows = 6;\r\n// const playboard = null;\r\n\r\nconst QuizCanvas = (props) => {\r\n  const { quizzes, pickedQuizId, setPickedQuizId, allQuizQuestions } = props;\r\n  const { questionPicked, setQuestionPicked } = props;\r\n  const [showCanvas, setShowCanvas] = useState(false);\r\n  // const [questionPicked, setQuestionPicked] = useState(null);\r\n  const canvasRef = useRef(null);\r\n  const canvasTextRef = useRef(null);\r\n  const canvasQuizQuestion = useRef(null);\r\n\r\n  // const cnvs = canvasRef.current;\r\n  // const ctx = cnvs.getContext(\"2d\");\r\n\r\n  const questionsBoardClickHandler = (i, j) => {\r\n    // event.preventDefault();\r\n    if (!showCanvas) {\r\n      console.log(\"visibility: \", showCanvas);\r\n      setPickedQuizId(quizzes[i].id);\r\n      setQuestionPicked(j - 1);\r\n      // setShowCanvas(true);\r\n      setShowCanvas(!showCanvas);\r\n    } else {\r\n      console.log(\"STOPPED EVENT\");\r\n    }\r\n  };\r\n\r\n  // const drawPlayboard = (cnvs, ctx, position) => {\r\n  //   // console.log(\"drawing\");\r\n\r\n  //   let squareSizeWidth = ctx.canvas.width / columns;\r\n  //   let squareSizeHeight = 500 / rows;\r\n\r\n  //   let titleSquareWidth = ctx.canvas.width / columns;\r\n  //   let titleSquareHeight = 500 / rows;\r\n  //   ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n  //   ctx.linewidth = 1;\r\n\r\n  //   for (let i = 0; i < rows; i++) {\r\n  //     for (let j = 0; j < columns; j++) {\r\n  //       if (j === 0) {\r\n  //         let x = titleSquareWidth * i;\r\n  //         let y = titleSquareHeight * j;\r\n\r\n  //         ctx.beginPath();\r\n  //         ctx.rect(x + 2, y + 2, titleSquareWidth - 5, titleSquareHeight - 5);\r\n  //         ctx.fillStyle = \"darkblue\";\r\n  //         ctx.fill();\r\n  //         ctx.strokeStyle = \"black\";\r\n  //         ctx.stroke();\r\n  //         ctx.closePath();\r\n  //       } else {\r\n  //         let x = squareSizeWidth * i;\r\n  //         let y = squareSizeHeight * j;\r\n\r\n  //         ctx.beginPath();\r\n  //         ctx.rect(x + 2, y + 2, squareSizeWidth - 5, squareSizeHeight - 5);\r\n  //         ctx.fillStyle = \"blue\";\r\n  //         ctx.fill();\r\n\r\n  //         if (\r\n  //           position.x > x + 2 &&\r\n  //           position.x < x + squareSizeWidth - 5 &&\r\n  //           position.y > y + 2 &&\r\n  //           position.y < y + squareSizeHeight - 5 &&\r\n  //           showCanvas === false\r\n  //         ) {\r\n  //           ctx.strokeStyle = \"yellow\";\r\n  //           ctx.lineWidth = 2;\r\n  //           // console.log(\"arrayLocation \", i, j);\r\n  //           // console.log(quizzes[i]);\r\n  //           // console.log(\"pickedQuizID \", pickedQuizId);\r\n  //           if (quizzes[i] !== undefined && showCanvas === false) {\r\n  //             document.addEventListener(\r\n  //               \"click\",\r\n  //               (event) => {\r\n  //                 questionsBoardClickEvent(i, j);\r\n  //                 // console.log(\"visibility: \", showCanvas);\r\n  //                 // event.preventDefault();\r\n  //                 // setPickedQuizId(quizzes[i].id);\r\n  //                 // setQuestionPicked(j - 1);\r\n  //                 // setShowCanvas(true);\r\n  //                 // displayQuestionAndAnswers(quizzes[i].id);\r\n  //               },\r\n  //               false\r\n  //             );\r\n  //           }\r\n  //         } else {\r\n  //           ctx.strokeStyle = \"black\";\r\n  //           ctx.lineWidth = 2;\r\n  //         }\r\n  //         ctx.stroke();\r\n  //         ctx.closePath();\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  // const populateBoard = (ctxText) => {\r\n  //   let titleSquareWidth = ctxText.canvas.width / columns;\r\n  //   let titleSquareHeight = 500 / rows;\r\n  //   let pointsValue = 0;\r\n  //   ctxText.clearRect(0, 0, ctxText.canvas.width, ctxText.canvas.height);\r\n  //   ctxText.linewidth = 1;\r\n\r\n  //   for (let i = 0; i < rows; i++) {\r\n  //     // console.log(ctxText.measureText(quizzes[i].title).width);\r\n  //     // console.log(ctxText.measureText(quizzes[i].title).height);\r\n  //     pointsValue = 0;\r\n  //     for (let j = 0; j < columns; j++) {\r\n  //       if (j === 0) {\r\n  //         let linesOfText = quizzes[i].title.split(\" \");\r\n  //         // console.log(\"lines \", linesOfText);\r\n  //         // let titleHeight =\r\n  //         //   ctxText.measureText(quizzes[i].title).actualBoundingBoxAscent +\r\n  //         //   ctxText.measureText(quizzes[i].title).actualBoundingBoxDescent;\r\n  //         // console.log(\"title height \", titleHeight);\r\n  //         let titleHeight = 18;\r\n\r\n  //         ctxText.font = \"18px Arial\";\r\n  //         ctxText.fillStyle = \"whitesmoke\";\r\n\r\n  //         if (linesOfText.length > 1) {\r\n  //           for (let t = 0; t < linesOfText.length; t++) {\r\n  //             ctxText.fillText(\r\n  //               `${linesOfText[t]}`,\r\n  //               titleSquareWidth * i +\r\n  //                 titleSquareWidth / 2 -\r\n  //                 ctxText.measureText(linesOfText[t]).width / 2,\r\n  //               titleSquareHeight / linesOfText.length + titleHeight * t,\r\n  //               115\r\n  //             );\r\n  //           }\r\n  //         } else {\r\n  //           ctxText.fillText(\r\n  //             `${quizzes[i].title}`,\r\n  //             titleSquareWidth * i +\r\n  //               titleSquareWidth / 2 -\r\n  //               ctxText.measureText(quizzes[i].title).width / 2,\r\n  //             titleSquareHeight / 2 + titleHeight / 2,\r\n  //             115\r\n  //           );\r\n  //         }\r\n  //       } else {\r\n  //         pointsValue += 200;\r\n  //         ctxText.font = \"25px Arial\";\r\n  //         ctxText.fillStyle = \"whitesmoke\";\r\n  //         let textHeight =\r\n  //           ctxText.measureText(pointsValue).actualBoundingBoxAscent +\r\n  //           ctxText.measureText(pointsValue).actualBoundingBoxDescent;\r\n  //         // console.log(\"height \", textHeight);\r\n  //         ctxText.fillText(\r\n  //           `$${pointsValue}`,\r\n  //           titleSquareWidth * i -\r\n  //             5 +\r\n  //             titleSquareWidth / 2 -\r\n  //             ctxText.measureText(pointsValue).width / 2,\r\n  //           titleSquareHeight * j + titleSquareHeight / 2 + textHeight / 2\r\n  //         );\r\n  //       }\r\n  //       // if (j === 0) {\r\n  //       //   let x = titleSquareWidth * i;\r\n  //       //   let y = titleSquareHeight * j;\r\n  //       //   ctx.beginPath();\r\n  //       //   ctx.rect(x + 2, y + 2, titleSquareWidth - 5, titleSquareHeight - 5);\r\n  //       //   ctx.fillStyle = \"darkblue\";\r\n  //       //   ctx.fill();\r\n  //       //   ctx.strokeStyle = \"black\";\r\n  //       //   ctx.stroke();\r\n  //       //   ctx.closePath();\r\n  //       // } else {\r\n  //       //   let x = squareSizeWidth * i;\r\n  //       //   let y = squareSizeHeight * j;\r\n  //       //   ctx.beginPath();\r\n  //       //   ctx.rect(x + 2, y + 2, squareSizeWidth - 5, squareSizeHeight - 5);\r\n  //       //   ctx.fillStyle = \"blue\";\r\n  //       //   ctx.fill();\r\n  //       //   ctx.strokeStyle = \"black\";\r\n  //       //   ctx.stroke();\r\n  //       //   ctx.closePath();\r\n  //       // }\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  const mouseMoveHandler = (e) => {\r\n    let relativeOffset = canvasRef.current.getBoundingClientRect();\r\n    let relativeX = e.clientX - relativeOffset.left;\r\n    let relativeY = e.clientY - relativeOffset.top;\r\n\r\n    // console.log(relativeX, relativeY);\r\n\r\n    const cnvs = canvasRef.current;\r\n    const ctx = cnvs.getContext(\"2d\");\r\n\r\n    if (!showCanvas)\r\n      drawPlayboard(\r\n        cnvs,\r\n        ctx,\r\n        { x: relativeX, y: relativeY },\r\n        showCanvas,\r\n        quizzes,\r\n        questionsBoardClickHandler\r\n      );\r\n  };\r\n\r\n  // initial drawing of the board, not populating any of the text\r\n  // useEffect(() => {\r\n  //   const cnvs = canvasRef.current;\r\n  //   const ctx = cnvs.getContext(\"2d\");\r\n\r\n  //   drawPlayboard(\r\n  //     cnvs,\r\n  //     ctx,\r\n  //     { x: 0, y: 0 },\r\n  //     showCanvas,\r\n  //     quizzes,\r\n  //     questionsBoardClickHandler\r\n  //   );\r\n  //   return () => {};\r\n  // });\r\n\r\n  useEffect(() => {\r\n    // const cnvs = canvasRef.current;\r\n    // const ctx = cnvs.getContext(\"2d\");\r\n    let animationFrameId;\r\n    let interval;\r\n\r\n    const render = () => {\r\n      // drawPlayboard(cnvs, ctx);\r\n      if (canvasRef.current !== null)\r\n        document.addEventListener(\"mousemove\", mouseMoveHandler, false);\r\n    };\r\n    const draw = () => {\r\n      interval = setInterval(() => {\r\n        render();\r\n      }, 10);\r\n    };\r\n    animationFrameId = requestAnimationFrame(draw);\r\n\r\n    return () => {\r\n      cancelAnimationFrame(animationFrameId);\r\n      clearInterval(interval);\r\n    };\r\n  });\r\n\r\n  const populateBoardText = () => {\r\n    const cnvsText = canvasTextRef.current;\r\n    const ctxText = cnvsText.getContext(\"2d\");\r\n    // console.log(\"topics \" + quizzes[0].topic);\r\n    if (quizzes.length !== 0) populateBoard(ctxText, quizzes);\r\n  };\r\n\r\n  useEffect(() => {\r\n    populateBoardText();\r\n    // return () => {};\r\n  });\r\n\r\n  const displayQuestionAndAnswers = (quizId, questionId) => {\r\n    // console.log(\"FILTERING\");\r\n    // console.log(\"QQ ID \", questionId);\r\n    // console.log(\"picked \", pickedQuizId);\r\n    // console.log(\"QQ \", allQuizQuestions);\r\n    const cnvsQuestion = canvasQuizQuestion.current;\r\n    const ctxQuestion = cnvsQuestion.getContext(\"2d\");\r\n\r\n    let filteredQuiz = allQuizQuestions.filter((quiz) => {\r\n      return quiz[0] === quizId;\r\n    });\r\n    console.log(\"QUIZ \", filteredQuiz);\r\n\r\n    ctxQuestion.clearRect(\r\n      0,\r\n      0,\r\n      ctxQuestion.canvas.width,\r\n      ctxQuestion.canvas.height\r\n    );\r\n\r\n    ctxQuestion.font = \"20px Ariel\";\r\n    ctxQuestion.fillStyle = \"red\";\r\n\r\n    if (filteredQuiz.length !== 0) {\r\n      console.log(\"filtered \", filteredQuiz);\r\n      console.log(\r\n        \"selected question \",\r\n        filteredQuiz[0][1][questionId].question\r\n      );\r\n      ctxQuestion.fillText(\r\n        `${filteredQuiz[0][1][questionId].question}`,\r\n        100,\r\n        100\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (pickedQuizId !== null) {\r\n      displayQuestionAndAnswers(pickedQuizId, questionPicked);\r\n    } else {\r\n      console.log(\"not going to display question text\");\r\n    }\r\n\r\n    // return () => {\r\n    //   cleanup\r\n    // }\r\n  }, [pickedQuizId]);\r\n\r\n  return (\r\n    <div>\r\n      {/* {console.log(window.innerWidth)} */}\r\n      <div\r\n        style={{\r\n          height: \"750px\",\r\n          background: \"grey\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <canvas\r\n          width={800}\r\n          height={700}\r\n          ref={canvasRef}\r\n          style={{\r\n            background: \"#222\",\r\n            zIndex: \"1\",\r\n            position: \"absolute\",\r\n          }}\r\n        />\r\n        <canvas\r\n          width={800}\r\n          height={700}\r\n          ref={canvasTextRef}\r\n          style={{ zIndex: \"10\", position: \"absolute\" }}\r\n        />\r\n        <canvas\r\n          width={796}\r\n          height={420}\r\n          ref={canvasQuizQuestion}\r\n          style={{\r\n            background: \"lightblue\",\r\n            zIndex: \"20\",\r\n            visibility: showCanvas ? \"visible\" : \"hidden\",\r\n            position: \"relative\",\r\n            top: \"-60px\",\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizCanvas;\r\n",["86","87"],"C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\components\\Functions\\index.js",[],"C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\components\\Functions\\drawPlayboard.js",[],["88","89"],"C:\\Users\\NtD\\Desktop\\Web-Projects\\quiz_tourney\\quiz-tourney\\src\\components\\Functions\\populateBoard.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":12},{"ruleId":"94","severity":1,"message":"98","line":6,"column":26,"nodeType":"96","messageId":"97","endLine":6,"endColumn":30},{"ruleId":"99","severity":2,"message":"100","line":19,"column":49,"nodeType":"96","messageId":"101","endLine":19,"endColumn":56},{"ruleId":"102","severity":1,"message":"103","line":46,"column":6,"nodeType":"104","endLine":46,"endColumn":18,"suggestions":"105"},{"ruleId":"102","severity":1,"message":"106","line":50,"column":6,"nodeType":"104","endLine":50,"endColumn":13,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":15,"column":1,"nodeType":"110","endLine":47,"endColumn":3},{"ruleId":"94","severity":1,"message":"111","line":12,"column":24,"nodeType":"96","messageId":"97","endLine":12,"endColumn":39},{"ruleId":"94","severity":1,"message":"112","line":19,"column":9,"nodeType":"96","messageId":"97","endLine":19,"endColumn":22},{"ruleId":"102","severity":1,"message":"113","line":38,"column":6,"nodeType":"104","endLine":38,"endColumn":20,"suggestions":"114"},{"ruleId":"102","severity":1,"message":"115","line":50,"column":6,"nodeType":"104","endLine":50,"endColumn":20,"suggestions":"116"},{"ruleId":"108","severity":1,"message":"109","line":15,"column":1,"nodeType":"110","endLine":38,"endColumn":3},{"ruleId":"94","severity":1,"message":"117","line":6,"column":7,"nodeType":"96","messageId":"97","endLine":6,"endColumn":14},{"ruleId":"94","severity":1,"message":"118","line":7,"column":7,"nodeType":"96","messageId":"97","endLine":7,"endColumn":11},{"ruleId":"102","severity":1,"message":"119","line":313,"column":6,"nodeType":"104","endLine":313,"endColumn":20,"suggestions":"120"},{"ruleId":"90","replacedBy":"121"},{"ruleId":"92","replacedBy":"122"},{"ruleId":"90","replacedBy":"123"},{"ruleId":"92","replacedBy":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-undef","'Quizzes' is not defined.","undef","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'randomPicks'. Either include it or remove the dependency array.","ArrayExpression",["127"],"React Hook useEffect has a missing dependency: 'newlySortedQuizArray'. Either include it or remove the dependency array.",["128"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'setPickedAnswer' is assigned a value but never used.","'answerChecked' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'viewedQuizQuestions'. Either include them or remove the dependency array. You can also do a functional update 'setViewedQuizQuestions(v => ...)' if you only need 'viewedQuizQuestions' in the 'setViewedQuizQuestions' call.",["129"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["130"],"'columns' is assigned a value but never used.","'rows' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'displayQuestionAndAnswers' and 'questionPicked'. Either include them or remove the dependency array.",["131"],["125"],["126"],["125"],["126"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [allQuizzes, randomPicks]",{"range":"142","text":"143"},"Update the dependencies array to be: [newlySortedQuizArray, picks]",{"range":"144","text":"145"},"Update the dependencies array to be: [dispatch, pickedQuizId, viewedQuizQuestions]",{"range":"146","text":"147"},"Update the dependencies array to be: [dispatch, pickedAnswer]",{"range":"148","text":"149"},"Update the dependencies array to be: [displayQuestionAndAnswers, pickedQuizId, questionPicked]",{"range":"150","text":"151"},[1268,1280],"[allQuizzes, randomPicks]",[1341,1348],"[newlySortedQuizArray, picks]",[1354,1368],"[dispatch, pickedQuizId, viewedQuizQuestions]",[1728,1742],"[dispatch, pickedAnswer]",[10312,10326],"[displayQuestionAndAnswers, pickedQuizId, questionPicked]"]